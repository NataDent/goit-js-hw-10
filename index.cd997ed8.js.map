{"mappings":"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","sources":["src/cat-api.js","node_modules/slim-select/dist/slimselect.umd.js","src/index.js"],"sourcesContent":["// import axios from \"axios\";\n\nconst ROOT_URL = 'https://api.thecatapi.com/v1';\nconst X_API_KEY = 'live_FRHznCkDEBA2Kr8ISlGtYpZ1nMdTqK6BKbcxoCO4g6OBxRHHn0KzH6YXTjSxLe1V';\nconst API_HEADERS = new Headers({\n    'Content-Type': 'application/json',\n    'x-api-key' : X_API_KEY,\n});\n\n// axios.defaults.headers.common[\"x-api-key\"] = \"live_FRHznCkDEBA2Kr8ISlGtYpZ1nMdTqK6BKbcxoCO4g6OBxRHHn0KzH6YXTjSxLe1V\";\n// axios.defaults.baseURL = 'https://api.thecatapi.com/v1/';\n\n\nfunction fetchBreeds(){   \n       return fetch (`${ROOT_URL}breeds`,{method:\"GET\", headers:API_HEADERS})\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.statusText);\n            }\n           return resp.json()})\n        .then(res => {\n           return res.map(obj => ({\n                id: obj.id ,\n                name: obj.name \n            }))\n        })\n        .catch(error =>console.log(error)); \n}\n    \nfunction fetchCatByBreed(breedId){     \n        return fetch(`${ROOT_URL}images/search?breed_ids=${breedId}`, {method:\"GET\",headers:API_HEADERS}).then(req => \n            {if(!req.ok){\n                throw new Error(req.error);\n            }\n            return req.json();\n        })\n    }\n\nexport { fetchBreeds, fetchCatByBreed };","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SlimSelect = factory());\n})(this, (function () { 'use strict';\n\n    function generateID() {\n        return Math.random().toString(36).substring(2, 10);\n    }\n    function hasClassInTree(element, className) {\n        function hasClass(e, c) {\n            if (c && e && e.classList && e.classList.contains(c)) {\n                return e;\n            }\n            if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n                return e;\n            }\n            return null;\n        }\n        function parentByClass(e, c) {\n            if (!e || e === document) {\n                return null;\n            }\n            else if (hasClass(e, c)) {\n                return e;\n            }\n            else {\n                return parentByClass(e.parentNode, c);\n            }\n        }\n        return hasClass(element, className) || parentByClass(element, className);\n    }\n    function debounce(func, wait = 50, immediate = false) {\n        let timeout;\n        return function (...args) {\n            const context = self;\n            const later = () => {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    }\n    function isEqual(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n    function kebabCase(str) {\n        const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase());\n        return str[0] === str[0].toUpperCase() ? result.substring(1) : result;\n    }\n\n    class Settings {\n        constructor(settings) {\n            this.id = '';\n            this.style = '';\n            this.class = [];\n            this.isMultiple = false;\n            this.isOpen = false;\n            this.isFullOpen = false;\n            this.intervalMove = null;\n            if (!settings) {\n                settings = {};\n            }\n            this.id = 'ss-' + generateID();\n            this.style = settings.style || '';\n            this.class = settings.class || [];\n            this.disabled = settings.disabled !== undefined ? settings.disabled : false;\n            this.alwaysOpen = settings.alwaysOpen !== undefined ? settings.alwaysOpen : false;\n            this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true;\n            this.searchPlaceholder = settings.searchPlaceholder || 'Search';\n            this.searchText = settings.searchText || 'No Results';\n            this.searchingText = settings.searchingText || 'Searching...';\n            this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false;\n            this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true;\n            this.contentLocation = settings.contentLocation || document.body;\n            this.contentPosition = settings.contentPosition || 'absolute';\n            this.openPosition = settings.openPosition || 'auto';\n            this.placeholderText = settings.placeholderText !== undefined ? settings.placeholderText : 'Select Value';\n            this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false;\n            this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false;\n            this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false;\n            this.minSelected = settings.minSelected || 0;\n            this.maxSelected = settings.maxSelected || 1000;\n            this.timeoutDelay = settings.timeoutDelay || 200;\n            this.maxValuesShown = settings.maxValuesShown || 20;\n            this.maxValuesMessage = settings.maxValuesMessage || '{number} selected';\n        }\n    }\n\n    class Optgroup {\n        constructor(optgroup) {\n            this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id;\n            this.label = optgroup.label || '';\n            this.selectAll = optgroup.selectAll === undefined ? false : optgroup.selectAll;\n            this.selectAllText = optgroup.selectAllText || 'Select All';\n            this.closable = optgroup.closable || 'off';\n            this.options = [];\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    this.options.push(new Option(o));\n                }\n            }\n        }\n    }\n    class Option {\n        constructor(option) {\n            this.id = !option.id || option.id === '' ? generateID() : option.id;\n            this.value = option.value === undefined ? option.text : option.value;\n            this.text = option.text || '';\n            this.html = option.html || '';\n            this.selected = option.selected !== undefined ? option.selected : false;\n            this.display = option.display !== undefined ? option.display : true;\n            this.disabled = option.disabled !== undefined ? option.disabled : false;\n            this.mandatory = option.mandatory !== undefined ? option.mandatory : false;\n            this.placeholder = option.placeholder !== undefined ? option.placeholder : false;\n            this.class = option.class || '';\n            this.style = option.style || '';\n            this.data = option.data || {};\n        }\n    }\n    class Store {\n        constructor(type, data) {\n            this.selectType = 'single';\n            this.data = [];\n            this.selectType = type;\n            this.setData(data);\n        }\n        validateDataArray(data) {\n            if (!Array.isArray(data)) {\n                return new Error('Data must be an array');\n            }\n            for (let dataObj of data) {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    if (!('label' in dataObj)) {\n                        return new Error('Optgroup must have a label');\n                    }\n                    if ('options' in dataObj && dataObj.options) {\n                        for (let option of dataObj.options) {\n                            return this.validateOption(option);\n                        }\n                    }\n                }\n                else if (dataObj instanceof Option || 'text' in dataObj) {\n                    return this.validateOption(dataObj);\n                }\n                else {\n                    return new Error('Data object must be a valid optgroup or option');\n                }\n            }\n            return null;\n        }\n        validateOption(option) {\n            if (!('text' in option)) {\n                return new Error('Option must have a text');\n            }\n            return null;\n        }\n        partialToFullData(data) {\n            let dataFinal = [];\n            data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    let optOptions = [];\n                    if ('options' in dataObj && dataObj.options) {\n                        dataObj.options.forEach((option) => {\n                            optOptions.push(new Option(option));\n                        });\n                    }\n                    if (optOptions.length > 0) {\n                        dataFinal.push(new Optgroup(dataObj));\n                    }\n                }\n                if (dataObj instanceof Option || 'text' in dataObj) {\n                    dataFinal.push(new Option(dataObj));\n                }\n            });\n            return dataFinal;\n        }\n        setData(data) {\n            this.data = this.partialToFullData(data);\n            if (this.selectType === 'single') {\n                this.setSelectedBy('value', this.getSelected());\n            }\n        }\n        getData() {\n            return this.filter(null, true);\n        }\n        getDataOptions() {\n            return this.filter(null, false);\n        }\n        addOption(option) {\n            this.setData(this.getData().concat(new Option(option)));\n        }\n        setSelectedBy(selectedType, selectedValues) {\n            let firstOption = null;\n            let hasSelected = false;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    for (let option of dataObj.options) {\n                        if (!firstOption) {\n                            firstOption = option;\n                        }\n                        option.selected = hasSelected ? false : selectedValues.includes(option[selectedType]);\n                        if (option.selected && this.selectType === 'single') {\n                            hasSelected = true;\n                        }\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!firstOption) {\n                        firstOption = dataObj;\n                    }\n                    dataObj.selected = hasSelected ? false : selectedValues.includes(dataObj[selectedType]);\n                    if (dataObj.selected && this.selectType === 'single') {\n                        hasSelected = true;\n                    }\n                }\n            }\n            if (this.selectType === 'single' && firstOption && !hasSelected) {\n                firstOption.selected = true;\n            }\n        }\n        getSelected() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedValues = [];\n            selectedOptions.forEach((option) => {\n                selectedValues.push(option.value);\n            });\n            return selectedValues;\n        }\n        getSelectedOptions() {\n            return this.filter((opt) => {\n                return opt.selected;\n            }, false);\n        }\n        getSelectedIDs() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedIDs = [];\n            selectedOptions.forEach((op) => {\n                selectedIDs.push(op.id);\n            });\n            return selectedIDs;\n        }\n        getOptgroupByID(id) {\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup && dataObj.id === id) {\n                    return dataObj;\n                }\n            }\n            return null;\n        }\n        getOptionByID(id) {\n            let options = this.filter((opt) => {\n                return opt.id === id;\n            }, false);\n            return options.length ? options[0] : null;\n        }\n        search(search, searchFilter) {\n            search = search.trim();\n            if (search === '') {\n                return this.getData();\n            }\n            return this.filter((opt) => {\n                return searchFilter(opt, search);\n            }, true);\n        }\n        filter(filter, includeOptgroup) {\n            const dataSearch = [];\n            this.data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup) {\n                    let optOptions = [];\n                    dataObj.options.forEach((option) => {\n                        if (!filter || filter(option)) {\n                            if (!includeOptgroup) {\n                                dataSearch.push(new Option(option));\n                            }\n                            else {\n                                optOptions.push(new Option(option));\n                            }\n                        }\n                    });\n                    if (optOptions.length > 0) {\n                        let optgroup = new Optgroup(dataObj);\n                        optgroup.options = optOptions;\n                        dataSearch.push(optgroup);\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!filter || filter(dataObj)) {\n                        dataSearch.push(new Option(dataObj));\n                    }\n                }\n            });\n            return dataSearch;\n        }\n        getSelectType() {\n            return this.selectType;\n        }\n    }\n\n    class Render {\n        constructor(settings, store, callbacks) {\n            this.classes = {\n                main: 'ss-main',\n                placeholder: 'ss-placeholder',\n                values: 'ss-values',\n                single: 'ss-single',\n                max: 'ss-max',\n                value: 'ss-value',\n                valueText: 'ss-value-text',\n                valueDelete: 'ss-value-delete',\n                valueOut: 'ss-value-out',\n                deselect: 'ss-deselect',\n                deselectPath: 'M10,10 L90,90 M10,90 L90,10',\n                arrow: 'ss-arrow',\n                arrowClose: 'M10,30 L50,70 L90,30',\n                arrowOpen: 'M10,70 L50,30 L90,70',\n                content: 'ss-content',\n                openAbove: 'ss-open-above',\n                openBelow: 'ss-open-below',\n                search: 'ss-search',\n                searchHighlighter: 'ss-search-highlight',\n                searching: 'ss-searching',\n                addable: 'ss-addable',\n                addablePath: 'M50,10 L50,90 M10,50 L90,50',\n                list: 'ss-list',\n                optgroup: 'ss-optgroup',\n                optgroupLabel: 'ss-optgroup-label',\n                optgroupLabelText: 'ss-optgroup-label-text',\n                optgroupActions: 'ss-optgroup-actions',\n                optgroupSelectAll: 'ss-selectall',\n                optgroupSelectAllBox: 'M60,10 L10,10 L10,90 L90,90 L90,50',\n                optgroupSelectAllCheck: 'M30,45 L50,70 L90,10',\n                optgroupClosable: 'ss-closable',\n                option: 'ss-option',\n                optionDelete: 'M10,10 L90,90 M10,90 L90,10',\n                highlighted: 'ss-highlighted',\n                open: 'ss-open',\n                close: 'ss-close',\n                selected: 'ss-selected',\n                error: 'ss-error',\n                disabled: 'ss-disabled',\n                hide: 'ss-hide',\n            };\n            this.store = store;\n            this.settings = settings;\n            this.callbacks = callbacks;\n            this.main = this.mainDiv();\n            this.content = this.contentDiv();\n            this.updateClassStyles();\n            this.updateAriaAttributes();\n            this.settings.contentLocation.appendChild(this.content.main);\n        }\n        enable() {\n            this.main.main.classList.remove(this.classes.disabled);\n            this.content.search.input.disabled = false;\n        }\n        disable() {\n            this.main.main.classList.add(this.classes.disabled);\n            this.content.search.input.disabled = true;\n        }\n        open() {\n            this.main.arrow.path.setAttribute('d', this.classes.arrowOpen);\n            this.main.main.classList.add(this.settings.openPosition === 'up' ? this.classes.openAbove : this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'true');\n            this.moveContent();\n            const selectedOptions = this.store.getSelectedOptions();\n            if (selectedOptions.length) {\n                const selectedId = selectedOptions[selectedOptions.length - 1].id;\n                const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]');\n                if (selectedOption) {\n                    this.ensureElementInView(this.content.list, selectedOption);\n                }\n            }\n        }\n        close() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.main.arrow.path.setAttribute('d', this.classes.arrowClose);\n        }\n        updateClassStyles() {\n            this.main.main.className = '';\n            this.main.main.removeAttribute('style');\n            this.content.main.className = '';\n            this.content.main.removeAttribute('style');\n            this.main.main.classList.add(this.classes.main);\n            this.content.main.classList.add(this.classes.content);\n            if (this.settings.style !== '') {\n                this.main.main.style.cssText = this.settings.style;\n                this.content.main.style.cssText = this.settings.style;\n            }\n            if (this.settings.class.length) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        this.main.main.classList.add(c.trim());\n                        this.content.main.classList.add(c.trim());\n                    }\n                }\n            }\n            if (this.settings.contentPosition === 'relative') {\n                this.content.main.classList.add('ss-' + this.settings.contentPosition);\n            }\n        }\n        updateAriaAttributes() {\n            this.main.main.role = 'combobox';\n            this.main.main.setAttribute('aria-haspopup', 'listbox');\n            this.main.main.setAttribute('aria-controls', this.content.main.id);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.setAttribute('role', 'listbox');\n        }\n        mainDiv() {\n            var _a;\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            main.tabIndex = 0;\n            main.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Enter':\n                    case ' ':\n                        this.callbacks.open();\n                        const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                        if (highlighted) {\n                            highlighted.click();\n                        }\n                        return false;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                }\n            };\n            main.onclick = (e) => {\n                if (this.settings.disabled) {\n                    return;\n                }\n                this.settings.isOpen ? this.callbacks.close() : this.callbacks.open();\n            };\n            const values = document.createElement('div');\n            values.classList.add(this.classes.values);\n            main.appendChild(values);\n            const deselect = document.createElement('div');\n            deselect.classList.add(this.classes.deselect);\n            const selectedOptions = (_a = this.store) === null || _a === void 0 ? void 0 : _a.getSelectedOptions();\n            if (!this.settings.allowDeselect || (this.settings.isMultiple && selectedOptions && selectedOptions.length <= 0)) {\n                deselect.classList.add(this.classes.hide);\n            }\n            else {\n                deselect.classList.remove(this.classes.hide);\n            }\n            deselect.onclick = (e) => {\n                e.stopPropagation();\n                if (this.settings.disabled) {\n                    return;\n                }\n                let shouldDelete = true;\n                const before = this.store.getSelectedOptions();\n                const after = [];\n                if (this.callbacks.beforeChange) {\n                    shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                }\n                if (shouldDelete) {\n                    if (this.settings.isMultiple) {\n                        this.callbacks.setSelected([], false);\n                        this.updateDeselectAll();\n                    }\n                    else {\n                        this.callbacks.setSelected([''], false);\n                    }\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            };\n            const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            deselectSvg.setAttribute('viewBox', '0 0 100 100');\n            const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            deselectPath.setAttribute('d', this.classes.deselectPath);\n            deselectSvg.appendChild(deselectPath);\n            deselect.appendChild(deselectSvg);\n            main.appendChild(deselect);\n            const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            arrow.classList.add(this.classes.arrow);\n            arrow.setAttribute('viewBox', '0 0 100 100');\n            const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            arrowPath.setAttribute('d', this.classes.arrowClose);\n            if (this.settings.alwaysOpen) {\n                arrow.classList.add(this.classes.hide);\n            }\n            arrow.appendChild(arrowPath);\n            main.appendChild(arrow);\n            return {\n                main: main,\n                values: values,\n                deselect: {\n                    main: deselect,\n                    svg: deselectSvg,\n                    path: deselectPath,\n                },\n                arrow: {\n                    main: arrow,\n                    path: arrowPath,\n                },\n            };\n        }\n        mainFocus(eventType) {\n            if (eventType !== 'click') {\n                this.main.main.focus({ preventScroll: true });\n            }\n        }\n        placeholder() {\n            const placeholderOption = this.store.filter((o) => o.placeholder, false);\n            let placeholderText = this.settings.placeholderText;\n            if (placeholderOption.length) {\n                if (placeholderOption[0].html !== '') {\n                    placeholderText = placeholderOption[0].html;\n                }\n                else if (placeholderOption[0].text !== '') {\n                    placeholderText = placeholderOption[0].text;\n                }\n            }\n            const placeholder = document.createElement('div');\n            placeholder.classList.add(this.classes.placeholder);\n            placeholder.innerHTML = placeholderText;\n            return placeholder;\n        }\n        renderValues() {\n            if (!this.settings.isMultiple) {\n                this.renderSingleValue();\n                return;\n            }\n            this.renderMultipleValues();\n        }\n        renderSingleValue() {\n            const selected = this.store.filter((o) => {\n                return o.selected && !o.placeholder;\n            }, false);\n            const selectedSingle = selected.length > 0 ? selected[0] : null;\n            if (!selectedSingle) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n            }\n            else {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.single);\n                if (selectedSingle.html) {\n                    singleValue.innerHTML = selectedSingle.html;\n                }\n                else {\n                    singleValue.innerText = selectedSingle.text;\n                }\n                this.main.values.innerHTML = singleValue.outerHTML;\n            }\n            if (!this.settings.allowDeselect || !selected.length) {\n                this.main.deselect.main.classList.add(this.classes.hide);\n            }\n            else {\n                this.main.deselect.main.classList.remove(this.classes.hide);\n            }\n        }\n        renderMultipleValues() {\n            let currentNodes = this.main.values.childNodes;\n            let selectedOptions = this.store.filter((opt) => {\n                return opt.selected && opt.display;\n            }, false);\n            if (selectedOptions.length === 0) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n                return;\n            }\n            else {\n                const placeholder = this.main.values.querySelector('.' + this.classes.placeholder);\n                if (placeholder) {\n                    placeholder.remove();\n                }\n            }\n            if (selectedOptions.length > this.settings.maxValuesShown) {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.max);\n                singleValue.textContent = this.settings.maxValuesMessage.replace('{number}', selectedOptions.length.toString());\n                this.main.values.innerHTML = singleValue.outerHTML;\n                return;\n            }\n            else {\n                const maxValuesMessage = this.main.values.querySelector('.' + this.classes.max);\n                if (maxValuesMessage) {\n                    maxValuesMessage.remove();\n                }\n            }\n            let removeNodes = [];\n            for (let i = 0; i < currentNodes.length; i++) {\n                const node = currentNodes[i];\n                const id = node.getAttribute('data-id');\n                if (id) {\n                    const found = selectedOptions.filter((opt) => {\n                        return opt.id === id;\n                    }, false);\n                    if (!found.length) {\n                        removeNodes.push(node);\n                    }\n                }\n            }\n            for (const n of removeNodes) {\n                n.classList.add(this.classes.valueOut);\n                setTimeout(() => {\n                    if (this.main.values.hasChildNodes() && this.main.values.contains(n)) {\n                        this.main.values.removeChild(n);\n                    }\n                }, 100);\n            }\n            currentNodes = this.main.values.childNodes;\n            for (let d = 0; d < selectedOptions.length; d++) {\n                let shouldAdd = true;\n                for (let i = 0; i < currentNodes.length; i++) {\n                    if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n                        shouldAdd = false;\n                    }\n                }\n                if (shouldAdd) {\n                    if (currentNodes.length === 0) {\n                        this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                    }\n                    else if (d === 0) {\n                        this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d]);\n                    }\n                    else {\n                        currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]));\n                    }\n                }\n            }\n            this.updateDeselectAll();\n        }\n        multipleValue(option) {\n            const value = document.createElement('div');\n            value.classList.add(this.classes.value);\n            value.dataset.id = option.id;\n            const text = document.createElement('div');\n            text.classList.add(this.classes.valueText);\n            text.innerText = option.text;\n            value.appendChild(text);\n            if (!option.mandatory) {\n                const deleteDiv = document.createElement('div');\n                deleteDiv.classList.add(this.classes.valueDelete);\n                deleteDiv.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.settings.disabled) {\n                        return;\n                    }\n                    let shouldDelete = true;\n                    const before = this.store.getSelectedOptions();\n                    const after = before.filter((o) => {\n                        return o.selected && o.id !== option.id;\n                    }, true);\n                    if (this.settings.minSelected && after.length < this.settings.minSelected) {\n                        return;\n                    }\n                    if (this.callbacks.beforeChange) {\n                        shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                    }\n                    if (shouldDelete) {\n                        let selectedValues = [];\n                        for (const o of after) {\n                            if (o instanceof Optgroup) {\n                                for (const c of o.options) {\n                                    selectedValues.push(c.value);\n                                }\n                            }\n                            if (o instanceof Option) {\n                                selectedValues.push(o.value);\n                            }\n                        }\n                        this.callbacks.setSelected(selectedValues, false);\n                        if (this.settings.closeOnSelect) {\n                            this.callbacks.close();\n                        }\n                        if (this.callbacks.afterChange) {\n                            this.callbacks.afterChange(after);\n                        }\n                        this.updateDeselectAll();\n                    }\n                };\n                const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                deleteSvg.setAttribute('viewBox', '0 0 100 100');\n                const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                deletePath.setAttribute('d', this.classes.optionDelete);\n                deleteSvg.appendChild(deletePath);\n                deleteDiv.appendChild(deleteSvg);\n                value.appendChild(deleteDiv);\n            }\n            return value;\n        }\n        contentDiv() {\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            const search = this.searchDiv();\n            main.appendChild(search.main);\n            const list = this.listDiv();\n            main.appendChild(list);\n            return {\n                main: main,\n                search: search,\n                list: list,\n            };\n        }\n        moveContent() {\n            if (this.settings.contentPosition === 'relative') {\n                this.moveContentBelow();\n                return;\n            }\n            if (this.settings.openPosition === 'down') {\n                this.moveContentBelow();\n                return;\n            }\n            else if (this.settings.openPosition === 'up') {\n                this.moveContentAbove();\n                return;\n            }\n            if (this.putContent() === 'up') {\n                this.moveContentAbove();\n            }\n            else {\n                this.moveContentBelow();\n            }\n        }\n        searchDiv() {\n            const main = document.createElement('div');\n            const input = document.createElement('input');\n            const addable = document.createElement('div');\n            main.classList.add(this.classes.search);\n            const searchReturn = {\n                main,\n                input,\n            };\n            if (!this.settings.showSearch) {\n                main.classList.add(this.classes.hide);\n                input.readOnly = true;\n            }\n            input.type = 'search';\n            input.placeholder = this.settings.searchPlaceholder;\n            input.tabIndex = -1;\n            input.setAttribute('aria-label', this.settings.searchPlaceholder);\n            input.setAttribute('autocapitalize', 'off');\n            input.setAttribute('autocomplete', 'off');\n            input.setAttribute('autocorrect', 'off');\n            input.oninput = debounce((e) => {\n                this.callbacks.search(e.target.value);\n            }, 100);\n            input.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                    case 'Enter':\n                    case ' ':\n                        if (this.callbacks.addable && e.ctrlKey) {\n                            addable.click();\n                            return false;\n                        }\n                        else {\n                            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                            if (highlighted) {\n                                highlighted.click();\n                                return false;\n                            }\n                        }\n                        return true;\n                }\n            };\n            main.appendChild(input);\n            if (this.callbacks.addable) {\n                addable.classList.add(this.classes.addable);\n                const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                plus.setAttribute('viewBox', '0 0 100 100');\n                const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                plusPath.setAttribute('d', this.classes.addablePath);\n                plus.appendChild(plusPath);\n                addable.appendChild(plus);\n                addable.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (!this.callbacks.addable) {\n                        return;\n                    }\n                    const inputValue = this.content.search.input.value.trim();\n                    if (inputValue === '') {\n                        this.content.search.input.focus();\n                        return;\n                    }\n                    const runFinish = (oo) => {\n                        let newOption = new Option(oo);\n                        this.callbacks.addOption(newOption);\n                        if (this.settings.isMultiple) {\n                            let values = this.store.getSelected();\n                            values.push(newOption.value);\n                            this.callbacks.setSelected(values, true);\n                        }\n                        else {\n                            this.callbacks.setSelected([newOption.value], true);\n                        }\n                        this.callbacks.search('');\n                        if (this.settings.closeOnSelect) {\n                            setTimeout(() => {\n                                this.callbacks.close();\n                            }, 100);\n                        }\n                    };\n                    const addableValue = this.callbacks.addable(inputValue);\n                    if (addableValue === false || addableValue === undefined || addableValue === null) {\n                        return;\n                    }\n                    if (addableValue instanceof Promise) {\n                        addableValue.then((value) => {\n                            if (typeof value === 'string') {\n                                runFinish({\n                                    text: value,\n                                    value: value,\n                                });\n                            }\n                            else {\n                                runFinish(value);\n                            }\n                        });\n                    }\n                    else if (typeof addableValue === 'string') {\n                        runFinish({\n                            text: addableValue,\n                            value: addableValue,\n                        });\n                    }\n                    else {\n                        runFinish(addableValue);\n                    }\n                    return;\n                };\n                main.appendChild(addable);\n                searchReturn.addable = {\n                    main: addable,\n                    svg: plus,\n                    path: plusPath,\n                };\n            }\n            return searchReturn;\n        }\n        searchFocus() {\n            this.content.search.input.focus();\n        }\n        getOptions(notPlaceholder = false, notDisabled = false, notHidden = false) {\n            let query = '.' + this.classes.option;\n            if (notPlaceholder) {\n                query += ':not(.' + this.classes.placeholder + ')';\n            }\n            if (notDisabled) {\n                query += ':not(.' + this.classes.disabled + ')';\n            }\n            if (notHidden) {\n                query += ':not(.' + this.classes.hide + ')';\n            }\n            return Array.from(this.content.list.querySelectorAll(query));\n        }\n        highlight(dir) {\n            const options = this.getOptions(true, true, true);\n            if (options.length === 0) {\n                return;\n            }\n            if (options.length === 1) {\n                if (!options[0].classList.contains(this.classes.highlighted)) {\n                    options[0].classList.add(this.classes.highlighted);\n                    return;\n                }\n            }\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].classList.contains(this.classes.highlighted)) {\n                    const prevOption = options[i];\n                    prevOption.classList.remove(this.classes.highlighted);\n                    const prevParent = prevOption.parentElement;\n                    if (prevParent && prevParent.classList.contains(this.classes.open)) {\n                        const optgroupLabel = prevParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    let selectOption = options[dir === 'down' ? (i + 1 < options.length ? i + 1 : 0) : i - 1 >= 0 ? i - 1 : options.length - 1];\n                    selectOption.classList.add(this.classes.highlighted);\n                    this.ensureElementInView(this.content.list, selectOption);\n                    const selectParent = selectOption.parentElement;\n                    if (selectParent && selectParent.classList.contains(this.classes.close)) {\n                        const optgroupLabel = selectParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    return;\n                }\n            }\n            options[dir === 'down' ? 0 : options.length - 1].classList.add(this.classes.highlighted);\n            this.ensureElementInView(this.content.list, options[dir === 'down' ? 0 : options.length - 1]);\n        }\n        listDiv() {\n            const options = document.createElement('div');\n            options.classList.add(this.classes.list);\n            return options;\n        }\n        renderError(error) {\n            this.content.list.innerHTML = '';\n            const errorDiv = document.createElement('div');\n            errorDiv.classList.add(this.classes.error);\n            errorDiv.textContent = error;\n            this.content.list.appendChild(errorDiv);\n        }\n        renderSearching() {\n            this.content.list.innerHTML = '';\n            const searchingDiv = document.createElement('div');\n            searchingDiv.classList.add(this.classes.searching);\n            searchingDiv.textContent = this.settings.searchingText;\n            this.content.list.appendChild(searchingDiv);\n        }\n        renderOptions(data) {\n            this.content.list.innerHTML = '';\n            if (data.length === 0) {\n                const noResults = document.createElement('div');\n                noResults.classList.add(this.classes.search);\n                noResults.innerHTML = this.settings.searchText;\n                this.content.list.appendChild(noResults);\n                return;\n            }\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    const optgroupEl = document.createElement('div');\n                    optgroupEl.classList.add(this.classes.optgroup);\n                    const optgroupLabel = document.createElement('div');\n                    optgroupLabel.classList.add(this.classes.optgroupLabel);\n                    optgroupEl.appendChild(optgroupLabel);\n                    const optgroupLabelText = document.createElement('div');\n                    optgroupLabelText.classList.add(this.classes.optgroupLabelText);\n                    optgroupLabelText.textContent = d.label;\n                    optgroupLabel.appendChild(optgroupLabelText);\n                    const optgroupActions = document.createElement('div');\n                    optgroupActions.classList.add(this.classes.optgroupActions);\n                    optgroupLabel.appendChild(optgroupActions);\n                    if (this.settings.isMultiple && d.selectAll) {\n                        const selectAll = document.createElement('div');\n                        selectAll.classList.add(this.classes.optgroupSelectAll);\n                        let allSelected = true;\n                        for (const o of d.options) {\n                            if (!o.selected) {\n                                allSelected = false;\n                                break;\n                            }\n                        }\n                        if (allSelected) {\n                            selectAll.classList.add(this.classes.selected);\n                        }\n                        const selectAllText = document.createElement('span');\n                        selectAllText.textContent = d.selectAllText;\n                        selectAll.appendChild(selectAllText);\n                        const selectAllSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        selectAllSvg.setAttribute('viewBox', '0 0 100 100');\n                        selectAll.appendChild(selectAllSvg);\n                        const selectAllBox = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllBox.setAttribute('d', this.classes.optgroupSelectAllBox);\n                        selectAllSvg.appendChild(selectAllBox);\n                        const selectAllCheck = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllCheck.setAttribute('d', this.classes.optgroupSelectAllCheck);\n                        selectAllSvg.appendChild(selectAllCheck);\n                        selectAll.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            const currentSelected = this.store.getSelected();\n                            if (allSelected) {\n                                const newSelected = currentSelected.filter((s) => {\n                                    for (const o of d.options) {\n                                        if (s === o.value) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                });\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                            else {\n                                const newSelected = currentSelected.concat(d.options.map((o) => o.value));\n                                for (const o of d.options) {\n                                    if (!this.store.getOptionByID(o.id)) {\n                                        this.callbacks.addOption(o);\n                                    }\n                                }\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                        });\n                        optgroupActions.appendChild(selectAll);\n                    }\n                    if (d.closable !== 'off') {\n                        const optgroupClosable = document.createElement('div');\n                        optgroupClosable.classList.add(this.classes.optgroupClosable);\n                        const optgroupClosableSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        optgroupClosableSvg.setAttribute('viewBox', '0 0 100 100');\n                        optgroupClosableSvg.classList.add(this.classes.arrow);\n                        optgroupClosable.appendChild(optgroupClosableSvg);\n                        const optgroupClosableArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        optgroupClosableSvg.appendChild(optgroupClosableArrow);\n                        if (d.options.some((o) => o.selected) || this.content.search.input.value.trim() !== '') {\n                            optgroupClosable.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'open') {\n                            optgroupEl.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'close') {\n                            optgroupEl.classList.add(this.classes.close);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                        }\n                        optgroupLabel.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (optgroupEl.classList.contains(this.classes.close)) {\n                                optgroupEl.classList.remove(this.classes.close);\n                                optgroupEl.classList.add(this.classes.open);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                            }\n                            else {\n                                optgroupEl.classList.remove(this.classes.open);\n                                optgroupEl.classList.add(this.classes.close);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                            }\n                        });\n                        optgroupActions.appendChild(optgroupClosable);\n                    }\n                    optgroupEl.appendChild(optgroupLabel);\n                    for (const o of d.options) {\n                        optgroupEl.appendChild(this.option(o));\n                    }\n                    this.content.list.appendChild(optgroupEl);\n                }\n                if (d instanceof Option) {\n                    this.content.list.appendChild(this.option(d));\n                }\n            }\n        }\n        option(option) {\n            if (option.placeholder) {\n                const placeholder = document.createElement('div');\n                placeholder.classList.add(this.classes.option);\n                placeholder.classList.add(this.classes.hide);\n                return placeholder;\n            }\n            const optionEl = document.createElement('div');\n            optionEl.dataset.id = option.id;\n            optionEl.id = option.id;\n            optionEl.classList.add(this.classes.option);\n            optionEl.setAttribute('role', 'option');\n            if (option.class) {\n                option.class.split(' ').forEach((dataClass) => {\n                    optionEl.classList.add(dataClass);\n                });\n            }\n            if (option.style) {\n                optionEl.style.cssText = option.style;\n            }\n            if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n                optionEl.innerHTML = this.highlightText(option.html !== '' ? option.html : option.text, this.content.search.input.value, this.classes.searchHighlighter);\n            }\n            else if (option.html !== '') {\n                optionEl.innerHTML = option.html;\n            }\n            else {\n                optionEl.textContent = option.text;\n            }\n            if (this.settings.showOptionTooltips && optionEl.textContent) {\n                optionEl.setAttribute('title', optionEl.textContent);\n            }\n            if (!option.display) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.disabled) {\n                optionEl.classList.add(this.classes.disabled);\n            }\n            if (option.selected && this.settings.hideSelected) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.selected) {\n                optionEl.classList.add(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'true');\n                this.main.main.setAttribute('aria-activedescendant', optionEl.id);\n            }\n            else {\n                optionEl.classList.remove(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'false');\n            }\n            optionEl.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const selectedOptions = this.store.getSelected();\n                const element = e.currentTarget;\n                const elementID = String(element.dataset.id);\n                if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n                    return;\n                }\n                if ((this.settings.isMultiple && this.settings.maxSelected <= selectedOptions.length && !option.selected) ||\n                    (this.settings.isMultiple && this.settings.minSelected >= selectedOptions.length && option.selected)) {\n                    return;\n                }\n                let shouldUpdate = false;\n                const before = this.store.getSelectedOptions();\n                let after = [];\n                if (this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = before.filter((o) => o.id !== elementID);\n                    }\n                    else {\n                        after = before.concat(option);\n                    }\n                }\n                if (!this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = [];\n                    }\n                    else {\n                        after = [option];\n                    }\n                }\n                if (!this.callbacks.beforeChange) {\n                    shouldUpdate = true;\n                }\n                if (this.callbacks.beforeChange) {\n                    if (this.callbacks.beforeChange(after, before) === false) {\n                        shouldUpdate = false;\n                    }\n                    else {\n                        shouldUpdate = true;\n                    }\n                }\n                if (shouldUpdate) {\n                    if (!this.store.getOptionByID(elementID)) {\n                        this.callbacks.addOption(option);\n                    }\n                    this.callbacks.setSelected(after.map((o) => o.value), false);\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            });\n            return optionEl;\n        }\n        destroy() {\n            this.main.main.remove();\n            this.content.main.remove();\n        }\n        highlightText(str, search, className) {\n            let completedString = str;\n            const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i');\n            if (!str.match(regex)) {\n                return str;\n            }\n            const matchStartPosition = str.match(regex).index;\n            const matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;\n            const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);\n            completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`);\n            return completedString;\n        }\n        moveContentAbove() {\n            const mainHeight = this.main.main.offsetHeight;\n            const contentHeight = this.content.main.offsetHeight;\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.classList.add(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.add(this.classes.openAbove);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-' + (mainHeight + contentHeight - 1) + 'px 0px 0px 0px';\n            this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n            this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n            this.content.main.style.width = containerRect.width + 'px';\n        }\n        moveContentBelow() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.add(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.add(this.classes.openBelow);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-1px 0px 0px 0px';\n            if (this.settings.contentPosition !== 'relative') {\n                this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n                this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n                this.content.main.style.width = containerRect.width + 'px';\n            }\n        }\n        ensureElementInView(container, element) {\n            const cTop = container.scrollTop + container.offsetTop;\n            const cBottom = cTop + container.clientHeight;\n            const eTop = element.offsetTop;\n            const eBottom = eTop + element.clientHeight;\n            if (eTop < cTop) {\n                container.scrollTop -= cTop - eTop;\n            }\n            else if (eBottom > cBottom) {\n                container.scrollTop += eBottom - cBottom;\n            }\n        }\n        putContent() {\n            const mainHeight = this.main.main.offsetHeight;\n            const mainRect = this.main.main.getBoundingClientRect();\n            const contentHeight = this.content.main.offsetHeight;\n            const spaceBelow = window.innerHeight - (mainRect.top + mainHeight);\n            if (spaceBelow <= contentHeight) {\n                if (mainRect.top > contentHeight) {\n                    return 'up';\n                }\n                else {\n                    return 'down';\n                }\n            }\n            return 'down';\n        }\n        updateDeselectAll() {\n            if (!this.store || !this.settings) {\n                return;\n            }\n            const selected = this.store.getSelectedOptions();\n            const hasSelectedItems = selected && selected.length > 0;\n            const isMultiple = this.settings.isMultiple;\n            const allowDeselect = this.settings.allowDeselect;\n            const deselectButton = this.main.deselect.main;\n            const hideClass = this.classes.hide;\n            if (allowDeselect && !(isMultiple && !hasSelectedItems)) {\n                deselectButton.classList.remove(hideClass);\n            }\n            else {\n                deselectButton.classList.add(hideClass);\n            }\n        }\n    }\n\n    class Select {\n        constructor(select) {\n            this.listen = false;\n            this.observer = null;\n            this.select = select;\n            this.select.addEventListener('change', this.valueChange.bind(this), {\n                passive: true,\n            });\n            this.observer = new MutationObserver(this.observeCall.bind(this));\n            this.changeListen(true);\n        }\n        enable() {\n            this.select.disabled = false;\n        }\n        disable() {\n            this.select.disabled = true;\n        }\n        hideUI() {\n            this.select.tabIndex = -1;\n            this.select.style.display = 'none';\n            this.select.setAttribute('aria-hidden', 'true');\n        }\n        showUI() {\n            this.select.removeAttribute('tabindex');\n            this.select.style.display = '';\n            this.select.removeAttribute('aria-hidden');\n        }\n        changeListen(listen) {\n            this.listen = listen;\n            if (listen) {\n                if (this.observer) {\n                    this.observer.observe(this.select, {\n                        subtree: true,\n                        childList: true,\n                        attributes: true,\n                    });\n                }\n            }\n            if (!listen) {\n                if (this.observer) {\n                    this.observer.disconnect();\n                }\n            }\n        }\n        valueChange(ev) {\n            if (this.listen && this.onValueChange) {\n                this.onValueChange(this.getSelectedValues());\n            }\n            return true;\n        }\n        observeCall(mutations) {\n            if (!this.listen) {\n                return;\n            }\n            let classChanged = false;\n            let disabledChanged = false;\n            let optgroupOptionChanged = false;\n            for (const m of mutations) {\n                if (m.target === this.select) {\n                    if (m.attributeName === 'disabled') {\n                        disabledChanged = true;\n                    }\n                    if (m.attributeName === 'class') {\n                        classChanged = true;\n                    }\n                }\n                if (m.target.nodeName === 'OPTGROUP' || m.target.nodeName === 'OPTION') {\n                    optgroupOptionChanged = true;\n                }\n            }\n            if (classChanged && this.onClassChange) {\n                this.onClassChange(this.select.className.split(' '));\n            }\n            if (disabledChanged && this.onDisabledChange) {\n                this.changeListen(false);\n                this.onDisabledChange(this.select.disabled);\n                this.changeListen(true);\n            }\n            if (optgroupOptionChanged && this.onOptionsChange) {\n                this.changeListen(false);\n                this.onOptionsChange(this.getData());\n                this.changeListen(true);\n            }\n        }\n        getData() {\n            let data = [];\n            const nodes = this.select.childNodes;\n            for (const n of nodes) {\n                if (n.nodeName === 'OPTGROUP') {\n                    data.push(this.getDataFromOptgroup(n));\n                }\n                if (n.nodeName === 'OPTION') {\n                    data.push(this.getDataFromOption(n));\n                }\n            }\n            return data;\n        }\n        getDataFromOptgroup(optgroup) {\n            let data = {\n                id: optgroup.id,\n                label: optgroup.label,\n                selectAll: optgroup.dataset ? optgroup.dataset.selectall === 'true' : false,\n                selectAllText: optgroup.dataset ? optgroup.dataset.selectalltext : 'Select all',\n                closable: optgroup.dataset ? optgroup.dataset.closable : 'off',\n                options: [],\n            };\n            const options = optgroup.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTION') {\n                    data.options.push(this.getDataFromOption(o));\n                }\n            }\n            return data;\n        }\n        getDataFromOption(option) {\n            return {\n                id: option.id,\n                value: option.value,\n                text: option.text,\n                html: option.dataset && option.dataset.html ? option.dataset.html : '',\n                selected: option.selected,\n                display: option.style.display === 'none' ? false : true,\n                disabled: option.disabled,\n                mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n                placeholder: option.dataset.placeholder === 'true',\n                class: option.className,\n                style: option.style.cssText,\n                data: option.dataset,\n            };\n        }\n        getSelectedValues() {\n            let values = [];\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroupOptions = o.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            if (option.selected) {\n                                values.push(option.value);\n                            }\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    if (option.selected) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            return values;\n        }\n        setSelected(value) {\n            this.changeListen(false);\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroup = o;\n                    const optgroupOptions = optgroup.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            option.selected = value.includes(option.value);\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    option.selected = value.includes(option.value);\n                }\n            }\n            this.changeListen(true);\n        }\n        updateSelect(id, style, classes) {\n            this.changeListen(false);\n            if (id) {\n                this.select.dataset.id = id;\n            }\n            if (style) {\n                this.select.style.cssText = style;\n            }\n            if (classes) {\n                this.select.className = '';\n                classes.forEach((c) => {\n                    if (c.trim() !== '') {\n                        this.select.classList.add(c.trim());\n                    }\n                });\n            }\n            this.changeListen(true);\n        }\n        updateOptions(data) {\n            this.changeListen(false);\n            this.select.innerHTML = '';\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    this.select.appendChild(this.createOptgroup(d));\n                }\n                if (d instanceof Option) {\n                    this.select.appendChild(this.createOption(d));\n                }\n            }\n            this.select.dispatchEvent(new Event('change'));\n            this.changeListen(true);\n        }\n        createOptgroup(optgroup) {\n            const optgroupEl = document.createElement('optgroup');\n            optgroupEl.id = optgroup.id;\n            optgroupEl.label = optgroup.label;\n            if (optgroup.selectAll) {\n                optgroupEl.dataset.selectAll = 'true';\n            }\n            if (optgroup.closable !== 'off') {\n                optgroupEl.dataset.closable = optgroup.closable;\n            }\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    optgroupEl.appendChild(this.createOption(o));\n                }\n            }\n            return optgroupEl;\n        }\n        createOption(info) {\n            const optionEl = document.createElement('option');\n            optionEl.id = info.id;\n            optionEl.value = info.value;\n            optionEl.innerHTML = info.text;\n            if (info.html !== '') {\n                optionEl.setAttribute('data-html', info.html);\n            }\n            if (info.selected) {\n                optionEl.selected = info.selected;\n            }\n            if (info.disabled) {\n                optionEl.disabled = true;\n            }\n            if (info.display === false) {\n                optionEl.style.display = 'none';\n            }\n            if (info.placeholder) {\n                optionEl.setAttribute('data-placeholder', 'true');\n            }\n            if (info.mandatory) {\n                optionEl.setAttribute('data-mandatory', 'true');\n            }\n            if (info.class) {\n                info.class.split(' ').forEach((optionClass) => {\n                    optionEl.classList.add(optionClass);\n                });\n            }\n            if (info.data && typeof info.data === 'object') {\n                Object.keys(info.data).forEach((key) => {\n                    optionEl.setAttribute('data-' + kebabCase(key), info.data[key]);\n                });\n            }\n            return optionEl;\n        }\n        destroy() {\n            this.changeListen(false);\n            this.select.removeEventListener('change', this.valueChange.bind(this));\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n            }\n            delete this.select.dataset.id;\n            this.showUI();\n        }\n    }\n\n    class SlimSelect {\n        constructor(config) {\n            var _a;\n            this.events = {\n                search: undefined,\n                searchFilter: (opt, search) => {\n                    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n                },\n                addable: undefined,\n                beforeChange: undefined,\n                afterChange: undefined,\n                beforeOpen: undefined,\n                afterOpen: undefined,\n                beforeClose: undefined,\n                afterClose: undefined,\n            };\n            this.windowResize = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.windowScroll = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.documentClick = (e) => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                if (e.target && !hasClassInTree(e.target, this.settings.id)) {\n                    this.close(e.type);\n                }\n            };\n            this.windowVisibilityChange = () => {\n                if (document.hidden) {\n                    this.close();\n                }\n            };\n            this.selectEl = (typeof config.select === 'string' ? document.querySelector(config.select) : config.select);\n            if (!this.selectEl) {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Could not find select element'));\n                }\n                return;\n            }\n            if (this.selectEl.tagName !== 'SELECT') {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Element isnt of type select'));\n                }\n                return;\n            }\n            if (this.selectEl.dataset.ssid) {\n                this.destroy();\n            }\n            this.settings = new Settings(config.settings);\n            const debounceEvents = ['afterChange', 'beforeOpen', 'afterOpen', 'beforeClose', 'afterClose'];\n            for (const key in config.events) {\n                if (!config.events.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (debounceEvents.indexOf(key) !== -1) {\n                    this.events[key] = debounce(config.events[key], 100);\n                }\n                else {\n                    this.events[key] = config.events[key];\n                }\n            }\n            this.settings.disabled = ((_a = config.settings) === null || _a === void 0 ? void 0 : _a.disabled) ? config.settings.disabled : this.selectEl.disabled;\n            this.settings.isMultiple = this.selectEl.multiple;\n            this.settings.style = this.selectEl.style.cssText;\n            this.settings.class = this.selectEl.className.split(' ');\n            this.select = new Select(this.selectEl);\n            this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class);\n            this.select.hideUI();\n            this.select.onValueChange = (values) => {\n                this.setSelected(values);\n            };\n            this.select.onClassChange = (classes) => {\n                this.settings.class = classes;\n                this.render.updateClassStyles();\n            };\n            this.select.onDisabledChange = (disabled) => {\n                if (disabled) {\n                    this.disable();\n                }\n                else {\n                    this.enable();\n                }\n            };\n            this.select.onOptionsChange = (data) => {\n                this.setData(data);\n            };\n            this.store = new Store(this.settings.isMultiple ? 'multiple' : 'single', config.data ? config.data : this.select.getData());\n            if (config.data) {\n                this.select.updateOptions(this.store.getData());\n            }\n            const callbacks = {\n                open: this.open.bind(this),\n                close: this.close.bind(this),\n                addable: this.events.addable ? this.events.addable : undefined,\n                setSelected: this.setSelected.bind(this),\n                addOption: this.addOption.bind(this),\n                search: this.search.bind(this),\n                beforeChange: this.events.beforeChange,\n                afterChange: this.events.afterChange,\n            };\n            this.render = new Render(this.settings, this.store, callbacks);\n            this.render.renderValues();\n            this.render.renderOptions(this.store.getData());\n            const selectAriaLabel = this.selectEl.getAttribute('aria-label');\n            const selectAriaLabelledBy = this.selectEl.getAttribute('aria-labelledby');\n            if (selectAriaLabel) {\n                this.render.main.main.setAttribute('aria-label', selectAriaLabel);\n            }\n            else if (selectAriaLabelledBy) {\n                this.render.main.main.setAttribute('aria-labelledby', selectAriaLabelledBy);\n            }\n            if (this.selectEl.parentNode) {\n                this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling);\n            }\n            document.addEventListener('click', this.documentClick);\n            window.addEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.addEventListener('scroll', this.windowScroll, false);\n            }\n            document.addEventListener('visibilitychange', this.windowVisibilityChange);\n            if (this.settings.disabled) {\n                this.disable();\n            }\n            if (this.settings.alwaysOpen) {\n                this.open();\n            }\n            this.selectEl.slim = this;\n        }\n        enable() {\n            this.settings.disabled = false;\n            this.select.enable();\n            this.render.enable();\n        }\n        disable() {\n            this.settings.disabled = true;\n            this.select.disable();\n            this.render.disable();\n        }\n        getData() {\n            return this.store.getData();\n        }\n        setData(data) {\n            const selected = this.store.getSelected();\n            const err = this.store.validateDataArray(data);\n            if (err) {\n                if (this.events.error) {\n                    this.events.error(err);\n                }\n                return;\n            }\n            this.store.setData(data);\n            const dataClean = this.store.getData();\n            this.select.updateOptions(dataClean);\n            this.render.renderValues();\n            this.render.renderOptions(dataClean);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        getSelected() {\n            return this.store.getSelected();\n        }\n        setSelected(value, runAfterChange = true) {\n            const selected = this.store.getSelected();\n            this.store.setSelectedBy('value', Array.isArray(value) ? value : [value]);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            if (this.render.content.search.input.value !== '') {\n                this.search(this.render.content.search.input.value);\n            }\n            else {\n                this.render.renderOptions(data);\n            }\n            if (runAfterChange && this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        addOption(option) {\n            const selected = this.store.getSelected();\n            if (!this.store.getDataOptions().some((o) => { var _a; return o.value === ((_a = option.value) !== null && _a !== void 0 ? _a : option.text); })) {\n                this.store.addOption(option);\n            }\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            this.render.renderOptions(data);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        open() {\n            if (this.settings.disabled || this.settings.isOpen) {\n                return;\n            }\n            if (this.events.beforeOpen) {\n                this.events.beforeOpen();\n            }\n            this.render.open();\n            if (this.settings.showSearch) {\n                this.render.searchFocus();\n            }\n            this.settings.isOpen = true;\n            setTimeout(() => {\n                if (this.events.afterOpen) {\n                    this.events.afterOpen();\n                }\n                if (this.settings.isOpen) {\n                    this.settings.isFullOpen = true;\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.contentPosition === 'absolute') {\n                if (this.settings.intervalMove) {\n                    clearInterval(this.settings.intervalMove);\n                }\n                this.settings.intervalMove = setInterval(this.render.moveContent.bind(this.render), 500);\n            }\n        }\n        close(eventType = null) {\n            if (!this.settings.isOpen || this.settings.alwaysOpen) {\n                return;\n            }\n            if (this.events.beforeClose) {\n                this.events.beforeClose();\n            }\n            this.render.close();\n            if (this.render.content.search.input.value !== '') {\n                this.search('');\n            }\n            this.render.mainFocus(eventType);\n            this.settings.isOpen = false;\n            this.settings.isFullOpen = false;\n            setTimeout(() => {\n                if (this.events.afterClose) {\n                    this.events.afterClose();\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.intervalMove) {\n                clearInterval(this.settings.intervalMove);\n            }\n        }\n        search(value) {\n            if (this.render.content.search.input.value !== value) {\n                this.render.content.search.input.value = value;\n            }\n            if (!this.events.search) {\n                this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value, this.events.searchFilter));\n                return;\n            }\n            this.render.renderSearching();\n            const searchResp = this.events.search(value, this.store.getSelectedOptions());\n            if (searchResp instanceof Promise) {\n                searchResp\n                    .then((data) => {\n                    this.render.renderOptions(this.store.partialToFullData(data));\n                })\n                    .catch((err) => {\n                    this.render.renderError(typeof err === 'string' ? err : err.message);\n                });\n                return;\n            }\n            else if (Array.isArray(searchResp)) {\n                this.render.renderOptions(this.store.partialToFullData(searchResp));\n            }\n            else {\n                this.render.renderError('Search event must return a promise or an array of data');\n            }\n        }\n        destroy() {\n            document.removeEventListener('click', this.documentClick);\n            window.removeEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.removeEventListener('scroll', this.windowScroll, false);\n            }\n            document.removeEventListener('visibilitychange', this.windowVisibilityChange);\n            this.store.setData([]);\n            this.render.destroy();\n            this.select.destroy();\n        }\n    }\n\n    return SlimSelect;\n\n}));\n","import axios from \"axios\";\nimport { fetchBreeds, fetchCatByBreed }  from \"./cat-api\";\nimport SlimSelect from 'slim-select'\n\nconst select = document.querySelector('.breed-select');\nconst selectBox = document.querySelector('.cat-info')\n\nfetchBreeds().then(createBreedsList);\nfunction createBreedsList(data) {\n  const result = data.map(({ id, name }) => ({\n    text: name,\n    value: id\n  }));\n\n  const emptyObj = { text: \" \", value: \" \" };\n    result.unshift(emptyObj);\n    \n     new SlimSelect({\n    select: '.breed-select',\n    data: result,\n  });\n}\n// const ROOT_URL = 'https://api.thecatapi.com/v1/ ';\n// const X_API_KEY = 'live_FRHznCkDEBA2Kr8ISlGtYpZ1nMdTqK6BKbcxoCO4g6OBxRHHn0KzH6YXTjSxLe1V';\n\n// const API_HEADERS = new Headers({\n//     'Content-Type': 'application/json',\n//     'x-api-key' : X_API_KEY,\n// });\n\nfunction fetchBreeds(){   \n       return fetch(`${ROOT_URL}breeds`,{method:\"GET\", headers:API_HEADERS})\n           .then(resp => {\n            console.log(resp)\n            if (!resp.ok) {\n                throw new Error(resp.statusText);\n            }\n           return resp.json()})\n        .then(res => {\n           return res.map(obj => ({\n                id: obj.id ,\n                name: obj.name \n            }))\n        })\n        .catch(error =>console.log(error)); \n}\n    \nfetchBreeds().then(data => console.log(data))\n"],"names":["$6b5f202d1456c0af$var$API_HEADERS","Headers","$6b5f202d1456c0af$export$913382e0b15b5503","fetch","method","headers","then","resp","ok","Error","statusText","json","res","map","obj","id","name","catch","error","console","log","$f753f16ae3da2a89$exports","generateID","Math","random","toString","substring","hasClassInTree","element","className","hasClass","e","c","classList","contains","dataset","parentByClass","document","parentNode","debounce","func","wait","immediate","timeout","args","context","self","later","apply","callNow","clearTimeout","setTimeout","isEqual","a","b","JSON","stringify","kebabCase","str","result","replace","match","toLowerCase","toUpperCase","Settings","constructor","settings","this","style","class","isMultiple","isOpen","isFullOpen","intervalMove","disabled","undefined","alwaysOpen","showSearch","searchPlaceholder","searchText","searchingText","searchHighlight","closeOnSelect","contentLocation","body","contentPosition","openPosition","placeholderText","allowDeselect","hideSelected","showOptionTooltips","minSelected","maxSelected","timeoutDelay","maxValuesShown","maxValuesMessage","Optgroup","optgroup","label","selectAll","selectAllText","closable","options","o","push","Option","option","value","text","html","selected","display","mandatory","placeholder","data","Store","validateDataArray","Array","isArray","dataObj","validateOption","partialToFullData","dataFinal","forEach","optOptions","length","setData","selectType","setSelectedBy","getSelected","getData","filter","getDataOptions","addOption","concat","selectedType","selectedValues","firstOption","hasSelected","includes","selectedOptions","getSelectedOptions","opt","getSelectedIDs","selectedIDs","op","getOptgroupByID","getOptionByID","search","searchFilter","trim","includeOptgroup","dataSearch","getSelectType","type","Render","enable","main","remove","classes","content","input","disable","add","open","arrow","path","setAttribute","arrowOpen","openAbove","openBelow","moveContent","store","selectedId","selectedOption","list","querySelector","ensureElementInView","close","arrowClose","updateClassStyles","removeAttribute","cssText","updateAriaAttributes","role","mainDiv","_a","createElement","tabIndex","onkeydown","key","callbacks","highlight","highlighted","click","onclick","values","appendChild","deselect","hide","stopPropagation","shouldDelete","before","after","beforeChange","setSelected","updateDeselectAll","afterChange","deselectSvg","createElementNS","deselectPath","arrowPath","svg","mainFocus","eventType","focus","preventScroll","placeholderOption","innerHTML","renderValues","renderMultipleValues","renderSingleValue","selectedSingle","singleValue","single","innerText","outerHTML","currentNodes","childNodes","max","textContent","removeNodes","i","node","getAttribute","n","valueOut","hasChildNodes","removeChild","d","shouldAdd","String","multipleValue","insertBefore","insertAdjacentElement","valueText","deleteDiv","valueDelete","preventDefault","deleteSvg","deletePath","optionDelete","contentDiv","searchDiv","listDiv","putContent","moveContentAbove","moveContentBelow","addable","searchReturn","readOnly","oninput","target","ctrlKey","plus","plusPath","addablePath","inputValue","runFinish","oo","newOption","addableValue","Promise","searchFocus","getOptions","notPlaceholder","notDisabled","notHidden","query","from","querySelectorAll","dir","prevOption","prevParent","parentElement","optgroupLabel","selectOption","selectParent","renderError","errorDiv","renderSearching","searchingDiv","searching","renderOptions","noResults","optgroupEl","optgroupLabelText","optgroupActions","optgroupSelectAll","allSelected","o1","selectAllSvg","selectAllBox","optgroupSelectAllBox","selectAllCheck","optgroupSelectAllCheck","addEventListener","currentSelected","newSelected","s","o5","optgroupClosable","optgroupClosableSvg","optgroupClosableArrow","some","o2","optionEl","split","dataClass","highlightText","searchHighlighter","currentTarget","elementID","shouldUpdate","destroy","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","mainHeight","offsetHeight","contentHeight","containerRect","getBoundingClientRect","margin","top","height","window","scrollY","left","scrollX","width","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","mainRect","innerHeight","hasSelectedItems","deselectButton","hideClass","Select","select","hideUI","showUI","changeListen","listen","observer","observe","subtree","childList","attributes","disconnect","valueChange","ev","onValueChange","getSelectedValues","observeCall","mutations","classChanged","disabledChanged","optgroupOptionChanged","m","attributeName","nodeName","onClassChange","onDisabledChange","onOptionsChange","nodes","getDataFromOptgroup","getDataFromOption","selectall","selectalltext","optgroupOptions","updateSelect","updateOptions","createOptgroup","createOption","dispatchEvent","Event","info","optionClass","Object","keys","removeEventListener","bind","passive","MutationObserver","SlimSelect","render","err","events","dataClean","runAfterChange","beforeOpen","afterOpen","clearInterval","setInterval","beforeClose","afterClose","searchResp","message","documentClick","windowResize","windowScroll","windowVisibilityChange","config","indexOf","hidden","selectEl","tagName","ssid","debounceEvents","hasOwnProperty","multiple","selectAriaLabel","selectAriaLabelledBy","nextSibling","slim","factory","ROOT_URL","API_HEADERS","unshift","$parcel$interopDefault"],"version":3,"file":"index.cd997ed8.js.map"}